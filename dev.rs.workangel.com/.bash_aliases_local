# Git
alias git="func_git"

# Log
alias log="func_log"

# Mongo
alias mongoextractwa="(cdwatmp && tar zxvf \$(ls -t test-db-dump-*.tar.gz | head -n 1))"
alias mongorestart="sudo bash -c 'service mongod stop; rm /data/mongod.lock > /dev/null 2>&1; service mongod start'"
alias mongorestorewa="mongorestore --drop --db wam /vagrant/tmp/dump/wam"
alias mongorestorewastaging="mongorestore --drop --db wam_staging /vagrant/tmp/dump/wam"
alias mongorunwa="mongo localhost:27017/wam"

# MySQL
alias mysqlshell="mysql -uroot -p\${DB_MYSQL_HIPPO_ROOT_PASSWORD}"
alias mysqlrestorehippo="mysqlshell hippo < /vagrant/tmp/lifeworks_dev_hippo.sql"
alias mysqldumphippo="mysqldump -uroot -p\${DB_MYSQL_HIPPO_ROOT_PASSWORD} hippo > /vagrant/tmp/lifeworks_dev_hippo.sql"

# Navigation
alias pushwa="func_pushd ${WA_ROOT}"
alias cdwa="builtin cd ${WA_ROOT}"
alias cdapi="builtin cd ${WA_ROOT}/wa-api"
alias cdarch="builtin cd ${WA_ROOT}/wa-arch"
alias cdcontent="builtin cd ${WA_ROOT}/wa-api-content"
alias cddoc="builtin cd ${WA_ROOT}/wa-api-documentation"
alias cdbackend="builtin cd ${WA_ROOT}/wa-backend"
alias cdhermes="builtin cd ${WA_ROOT}/wa-hermes"
alias cdinfra="builtin cd ${WA_ROOT}/wa-infrastructure"
alias cdsso="builtin cd ${WA_ROOT}/wa-sso"
alias cdwatmp="builtin cd /vagrant/tmp"
alias cdzeus="builtin cd ${WA_ROOT}/wa-zeus"

# Rake
alias rakeall="(builtin cd ${HOME} && _ rake api:vagrant && _ rake arch:vagrant && _ rake backend:vagrant && _ rake bouncer:vagrant && _ rake hermes:vagrant && _ rake sso:vagrant && _ rake shim:vagrant && _ rake zeus:vagrant && _ rake automationbackend:vagrant && _ rake db:new)"
alias rakedb="(cdapi && _ rake api:db && _ deployment/generate-doctrine.sh && cdarch && rake arch:db)"
alias rakebadge="source ~/.bashrc; source /srv/environment; _ php /srv/wa-api/public/index.php setup badge create"
alias rakedoctrine="_ rake api:doctrine && _ sudo service php-fpm restart"

# Xdebug
alias xdbapi="xdb wa-api"
alias xdbbackend="xdb wa-backend"

# WA
alias waapils="sudo bash -c 'source /srv/environment && php /srv/wa-api/public/index.php' | less -R"
alias waapidocs="php /srv/wa-api/public/index.php odm:generate:proxies && php /srv/wa-api/public/index.php odm:generate:hydrators && php /srv/wa-api/public/index.php odm:generate:persistent-collections ; sudo service php-fpm reload"
alias wabackendls="sudo bash -c 'source /srv/environment && php /srv/wa-backend/public/index.php' | less -R"
alias wakill="wakillap && wakilljb && wakillpm"
alias wakillap="sudo pkill -9 -f '^php [^ ]+ apns processqueue\$'; wastatusap"
alias wakilljb="sudo pkill -9 -f '^php [^ ]+ job processqueue\$'; wastatusjb"
alias wakillpm="sudo pkill -9 -f '^php [^ ]+ process manager start\$'; wastatuspm"
alias wastartap="wakilljb; source ~/.bashrc; source /srv/environment; php /srv/wa-api/public/index.php apns processqueue"
alias wastartjb="wakilljb; source ~/.bashrc; source /srv/environment; php /srv/wa-api/public/index.php job processqueue"
alias wastartpm="wakillpm; source ~/.bashrc; source /srv/environment; php /srv/wa-api/public/index.php process manager start"
alias wastatus="wastatusap && wastatusjb && wastatuspm"
alias wastatusap="sudo pgrep -f '^php [^ ]+ apns processqueue\$' > /dev/null; if [ \${?} -eq 0 ]; then echo 'APNS queue processor is running'; else echo 'APNS queue processor is not running'; fi"
alias wastatusjb="sudo pgrep -f '^php [^ ]+ job processqueue\$' > /dev/null; if [ \${?} -eq 0 ]; then echo 'Job queue processor is running'; else echo 'Job queue processor is not running'; fi"
alias wastatuspm="sudo pgrep -f '^php [^ ]+ process manager start\$' > /dev/null; if [ \${?} -eq 0 ]; then echo 'Process manager is running'; else echo 'Process manager is not running'; fi"
